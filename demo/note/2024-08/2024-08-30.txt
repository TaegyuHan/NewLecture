DB 고려사항
1. 동시성
2. 인증
3. 성능

VIEW와 PROCEDURE의 차이를 잘 알아서 사용하자

PROCEDURE를 사용하지 않는 이유가 있다.
PROCEDURE를 사용하면 성능이 엄청 좋아진다.
하지만 사용하지 않는다. 로직이 DB에 들어가기 때문에
DB를 바꾸면 로직을 다시 바꿔야 한다.

데이터 베이스 입장에서 * 사용은 좋지 않다.
하지만 처음은 *를 사용해서 테이블을 가져오고
성능이 느려지면 필요한 컬럼만 가져오는 방법을 사용하자.

성능 차이를 발견하고 해결하는 사람이 되는것이 중요하다.

유니온의 등장!!!
통합 검색을 할 때 사용
유니온은 두개의 테이블을 합쳐서 검색을 할 때 사용

유니온 동일한 데이터는 합쳐서 나온다!!! (중요)
중복을 제거한다.

UNION ALL
중복을 제거하지 않는다.

MINUS: 차집합
INTERSECT: 교집합

--
관리자 페이지를 만드는것이 어렵다.

튜닝의 끝은 인덱스이다.



